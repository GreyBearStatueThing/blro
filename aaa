wait(5)
local function moveTo(humanoid, targetPoint, andThen)
	local targetReached = false

	-- listen for the humanoid reaching its target
	local connection
	connection = humanoid.MoveToFinished:Connect(function(reached)
		targetReached = true
		connection:Disconnect()
		connection = nil
		if andThen then
			andThen(reached)
		end
	end)

	-- start walking
	humanoid:MoveTo(targetPoint)

	-- execute on a new thread so as to not yield function
	task.spawn(function()
		while not targetReached do
			-- does the humanoid still exist?
			if not (humanoid and humanoid.Parent) then
				break
			end
			-- has the target changed?
			if humanoid.WalkToPoint ~= targetPoint then
				break
			end
			-- refresh the timeout
			humanoid:MoveTo(targetPoint)
			task.wait(6)
		end

		-- disconnect the connection if it is still connected
		if connection then
			connection:Disconnect()
			connection = nil
		end
	end)
end
local function andThen(reached)
	print((reached and "Destination reached!") or "Failed to reach destination!")
end
moveTo(game.Players.LocalPlayer.Character.Humanoid, Vector3.new(26, 27, 123), andThen)
wait(4)
moveTo(game.Players.LocalPlayer.Character.Humanoid, Vector3.new(3, 35, 106), andThen)
wait(4)
moveTo(game.Players.LocalPlayer.Character.Humanoid, Vector3.new(-107, 35, 129), andThen)
wait(10)
keypress(0x45)
keyrelease(0x45)
wait(1)
while wait(0.05) do
local args = {
    [1] = "Use"
}

game.ReplicatedStorage.UseItem:FireServer(unpack(args))
end
wait(280)
Players.LocalPlayer:Kick("\nRejoining...")
wait()
TeleportService:Teleport(5161312636, Players.LocalPlayer)

